{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Vasquez_Lab 1",
      "provenance": [],
      "authorship_tag": "ABX9TyMo4gLKad0nIALx6Dg5pzQf",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/sofiavasqq/Vasquez_Labs/blob/main/Vasquez_Lab_1.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Lab#1 Notebook"
      ],
      "metadata": {
        "id": "KSFw-LOfw8Gw"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Python Basics"
      ],
      "metadata": {
        "id": "S25Q0mqh1nWD"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Using python as a calculator"
      ],
      "metadata": {
        "id": "ZDYJkJDM4UgI"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-H0AcPHDwOSa",
        "outputId": "65ca88a4-3922-44af-82c9-14f29d736218"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "4"
            ]
          },
          "metadata": {},
          "execution_count": 1
        }
      ],
      "source": [
        "2+2 #adding numbers"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "2**8 #squaring numbers"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3l6C3kVPxXG_",
        "outputId": "feddad92-7507-42ed-cbed-89ed1ce90597"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "256"
            ]
          },
          "metadata": {},
          "execution_count": 84
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "2*24 #multiplying numbers"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "VLyU2EfExaMv",
        "outputId": "c96b8d7f-72bf-4fd0-b83c-bfd2952ee1ca"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "48"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "2**12345 #squaring numbers"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lC7NTXH7xcMv",
        "outputId": "edfc2332-6792-4757-a9a8-73ee1880a2e7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "164171010688258216356020741663906501410127235530735881272116103087925094171390144280159034536439457734870419127140401667195510331085657185332721089236401193044493457116299768844344303479235489462436380672117015123283299131391904179287678259173308536738761981139958654880852234908448338817289014166774169869251339379828599748492918775437864739032217778051333882990074116246281269364933724892342134504702491040016637557429810893780765197418589477584716543480995722533317862352141459217781316266211186486157019262080414077670264642736018426998113523445732680856144329876972273300703392584997729207197971083945700345494092400147186997307012069454068489589035676979448169848060836924945824197706493306108258511936030341393221586423523264452449403781993352421885094664052270795527632721896121424813173522474674395886155092203404036730748474781710715745446135468098139831824083259647919175273503681561172684624283384438504776503000432241604550454374116320822227191911322123484085063926350606342197146407841178028071147192533942517270553513988142925976090769695456221159699052583533011331652079347093098173086975483539274464023357456484465482927479569437320368592222760278170306076733438801098370797675711274671054970711442158930561684343135774118741594506702833147396758825015850042983343690345185995956235143825771620543546030664562647854656431302644574119873820215595718618624485232422006575550007068883734241454686368856734496265385908809403972494685137741122866896719678053937285818409751670320140501843039224040735870096889596273419106389103662095318937990625980136711988237421962315266686856089505981438440850638067589321141759499017023839596858455548192000140085142294166987063499024792681334843159790936321351919859758669569200541507612099780909705198902176026219872201715422096090343686272984351441594569506778041062663266799342793856313801540959815845788584759033248828248561586450271172777240971795656082001848115815260930521663167480173886064019118572778281516735157779555888167787064432558595410843987446497881666288423233170060413025924629950477303342180149398926073618582715358742250388958231281694757980523791263699450732952325727664209947786063982561775327638504516918570101319391698412388607603742484414748268389669129118026878969735782286841116842656410574647607524418900720328045377993386279808768990376289424757351052369393977137871998119168898493037938756635621557623138404459266598837784229325799838782026060481496865561757031839002257091802876949248392744175669112242088439883248336310597001257385980776961529351198877747193531054956881808332177946751404038228718567911769630971553915410012677600002457982207465176670752102117002773980548089696530972476439694599881281812973217265853884727906535479745854085338851105144585481994156206497436745899944877732531412541279014300324594890623941145509856940982863769834430048120562966797907114102689879364945689860493474954538422367719507882513166051007352994068319251450666676648368200564329382998758875760414259654004977261309988267319806354856051784553990936610634733375984159028722378614984450255386315585631994503350002142910493190254825610707400589976364985748467955131077971641882672895854571236368282811336220769174784720113331269084746524204124263475054112841630933586166195036115696469686075600480420563557567616835633252622327172811002146392754445051182169805284630259703542633955126179520113059629914229833688535925729676778028406897316106101038469119090984567152591962365415039646394591503830797626339246986057077758611413664914168745375266786298141171496573941614387744125843685677063619782918759823106021054037757857761587472240835040580447360544029064930412569943169729238102162312218687930203068055400275795180972382856696655279408212344832"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "4.7876+9.87654 #adding numbers"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "X_YsCj8vxe3u",
        "outputId": "eaa16b32-46a5-45d9-db7f-dde372d8f0bf"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "14.66414"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "4.7876*9.87654 #multiplying numbers"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Lhl0aVnpxnce",
        "outputId": "e9c82775-0659-44ab-bb10-e2c488e0392a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "47.284922904000005"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "4.7876/9.87654 #dividing numbers"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JNOJM65nx0CW",
        "outputId": "da4e0b3f-2daa-4ba0-cc09-c671ca1c1819"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.48474465754201373"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Hastags makes textboxes headers"
      ],
      "metadata": {
        "id": "tj5RiRbgyGQw"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#this is a comment"
      ],
      "metadata": {
        "id": "jo7eRbAbx2jE"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "#double slash ignores the remainder"
      ],
      "metadata": {
        "id": "52Agwf2Yx_zO"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "8//4 "
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NHgwCBzEx823",
        "outputId": "e6d37cca-d772-409d-9573-6c914a48621a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Using %"
      ],
      "metadata": {
        "id": "sFWLbSxuyUfg"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "13%12 #the % shows how much remains when you divide two numbers"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9th0SryOyORX",
        "outputId": "a7e8b8cc-5777-44fd-f466-e246207fe68b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1"
            ]
          },
          "metadata": {},
          "execution_count": 240
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "22%12"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "htn3OR-0yQPA",
        "outputId": "7d5c2fc1-ce0b-4c64-b2d2-3d3c2eddaffd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "10"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Creating Varibles"
      ],
      "metadata": {
        "id": "WYIHYSe_6DMD"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "apples=5 #created a new varibles called apples and the system stored the number"
      ],
      "metadata": {
        "id": "cFQOxTUEyWKQ"
      },
      "execution_count": 28,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "apples"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dxiCgStQylzQ",
        "outputId": "518c7a21-565a-4e86-d849-35387845b970"
      },
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "5"
            ]
          },
          "metadata": {},
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "oranges = 8"
      ],
      "metadata": {
        "id": "Ya6n5Hkqynhv"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "oranges"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RSZC_j5DzGoc",
        "outputId": "10b297ba-4cc6-474c-f61e-73b809205385"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "8"
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "total=apples + oranges #to check thatthe code worked, you can tyoe in the variable to check"
      ],
      "metadata": {
        "id": "hQNlqOt6ytaB"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "total"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0MDDoMdky0Ui",
        "outputId": "f23da742-7731-4a74-fd1d-28a0d36b9519"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "13"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# by creating variables, you can create equation using words"
      ],
      "metadata": {
        "id": "NXCIOx0Iy2HS"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "print(apples) #print shows the value of the variable"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "IkUOLKJYy_qi",
        "outputId": "c0920b19-c01c-4747-b72c-d7d640e36520"
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "5\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "total = apples + oranges"
      ],
      "metadata": {
        "id": "bGhjLct5zTgS"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "total"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nm_rbiyBzeNT",
        "outputId": "4e1e79a3-0ed4-4d9d-f6fd-f7cc6214b65e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "13"
            ]
          },
          "metadata": {},
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "apples**2 #squaring apples"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JX9Ygv8mze5S",
        "outputId": "4d4e1633-757d-4853-8a65-0b17e7a171a3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "25"
            ]
          },
          "metadata": {},
          "execution_count": 158
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "double * squares , one * mutiplies\n"
      ],
      "metadata": {
        "id": "oN8HGl_Vzoa0"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "apple=5"
      ],
      "metadata": {
        "id": "yC4xzw6cz8iT"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "cost_per_apple=0.25"
      ],
      "metadata": {
        "id": "mSZ9yWax0MWD"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "total_apple_cost= apple * cost_per_apple"
      ],
      "metadata": {
        "id": "MQify-370ReA"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "total_apple_cost"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YK98Ps6C0WzA",
        "outputId": "a5778875-51a8-4d27-a48a-ae1afec3bc1a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1.25"
            ]
          },
          "metadata": {},
          "execution_count": 38
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Using Variables to Calculate Sales"
      ],
      "metadata": {
        "id": "kNxGDmiu2-bF"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "shirt_cost=25 #start with making prices for items"
      ],
      "metadata": {
        "id": "j54Ka05Z0Y6g"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "pants_cost=45"
      ],
      "metadata": {
        "id": "BTGtO6_w0c9Q"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "shoes_cost=90"
      ],
      "metadata": {
        "id": "eCldDFjL0fO2"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "shirts_sold=12 #then input how many of those items was sold"
      ],
      "metadata": {
        "id": "7jVAg0dm0il1"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "pants_sold=15"
      ],
      "metadata": {
        "id": "2CyjDLDw0k6l"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "shoes_sold=7"
      ],
      "metadata": {
        "id": "WLERFtyM0om1"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "total_sales= (shirt_cost*shirts_sold) + (pants_cost*pants_sold) + (shoes_cost*shoes_sold) #then create a equation  that can calculate the total amount of sales"
      ],
      "metadata": {
        "id": "aznx8vfT0qkF"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "total_sales #note this is in dollars"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Klt5h2f90-fy",
        "outputId": "c077a349-eda5-4b9f-a3cb-484aeff6ea22"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1605"
            ]
          },
          "metadata": {},
          "execution_count": 49
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "^^ this is how you can use code to create prices for items and use code to calculate sales"
      ],
      "metadata": {
        "id": "s4UCNJjO1Stq"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "total_shirt_sales = (shirt_cost*shirts_sold)"
      ],
      "metadata": {
        "id": "YPfp_CAT1gMy"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "total_shirt_sales"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "t8_CckzF17qj",
        "outputId": "2bbc1e1a-7fb8-448d-87cb-2746c28ca16b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "300"
            ]
          },
          "metadata": {},
          "execution_count": 51
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "total_pants_sales=(pants_cost*pants_sold)"
      ],
      "metadata": {
        "id": "WnWXS6U319XD"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "total_pants_sales"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9qklNL9k2BPD",
        "outputId": "f2e67465-2367-4850-ad72-3bd3c922709a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "675"
            ]
          },
          "metadata": {},
          "execution_count": 53
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "total_shoes_sales=(shoes_cost*shoes_sold)"
      ],
      "metadata": {
        "id": "yk_wC6Vj2CUj"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "total_shoes_sales"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rP7YMtRL2F2k",
        "outputId": "c4b3f886-62f8-4f2d-fb5a-c00b1be56d96"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "630"
            ]
          },
          "metadata": {},
          "execution_count": 55
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Vectors"
      ],
      "metadata": {
        "id": "e3rSsk-a2fpw"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np"
      ],
      "metadata": {
        "id": "Jodj8meP2iVd"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt #used for making plots"
      ],
      "metadata": {
        "id": "1AZxCcMl3IKV"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "np.arange(10)  #starts counting with a 0 and"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nnkXny2Y3Vx3",
        "outputId": "6d9df0c3-31a2-4341-cd31-18382303a8fe"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])"
            ]
          },
          "metadata": {},
          "execution_count": 65
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x= np.arange(10)"
      ],
      "metadata": {
        "id": "5weCf2Fw4nGW"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "VR4Y4O-k4p9W",
        "outputId": "51a95b44-f9d7-4991-e474-b8b406bb1e67"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])"
            ]
          },
          "metadata": {},
          "execution_count": 68
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x+1 #includes the number 10"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "eGqeYWFW4qbW",
        "outputId": "c2ee6726-21d8-45fb-f62d-7a16e5a6d7ff"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10])"
            ]
          },
          "metadata": {},
          "execution_count": 93
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x+3 #adds 3 to every output"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "a2CVq95g4rdV",
        "outputId": "a203969b-8908-4a04-9046-8a0c512c79a1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 3,  4,  5,  6,  7,  8,  9, 10, 11, 12])"
            ]
          },
          "metadata": {},
          "execution_count": 92
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x*2 #x multiplied"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "tQa_0Mhi4uP2",
        "outputId": "42d56c59-282d-48de-bcb3-1775acbe5662"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0,  2,  4,  6,  8, 10, 12, 14, 16, 18])"
            ]
          },
          "metadata": {},
          "execution_count": 91
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x**2 #x squared"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "eoV5jCrs4wT0",
        "outputId": "1610fcc6-cc91-45b3-aa24-dd8b4f7ef440"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0,  1,  4,  9, 16, 25, 36, 49, 64, 81])"
            ]
          },
          "metadata": {},
          "execution_count": 72
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y=3*x+5"
      ],
      "metadata": {
        "id": "7T3lhFAm41OY"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "y"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wlNyVTG344mI",
        "outputId": "80efc550-6331-4d4c-fefd-5379419046ff"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 5,  8, 11, 14, 17, 20, 23, 26, 29, 32])"
            ]
          },
          "metadata": {},
          "execution_count": 74
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nj6fOof945So",
        "outputId": "c14013ad-b1db-4f13-d0d1-77ad8171d6e9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])"
            ]
          },
          "metadata": {},
          "execution_count": 75
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "sDlTARLe4-CG",
        "outputId": "19943780-e871-48ca-d4dd-cf6746ed1a62"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 5,  8, 11, 14, 17, 20, 23, 26, 29, 32])"
            ]
          },
          "metadata": {},
          "execution_count": 76
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(x,y) #plot is used to make a graph of equations"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ib1msyCl5Eql",
        "outputId": "094db4a1-cb0b-4269-e373-85e38566d771"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<matplotlib.lines.Line2D at 0x7fc0a6716790>]"
            ]
          },
          "metadata": {},
          "execution_count": 79
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(x,y,'.') #by including ('.') you can created a dotted graph"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "pwnF8LwD5LXG",
        "outputId": "186b8967-23ff-41d8-e216-f477df4e7f3d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<matplotlib.lines.Line2D at 0x7fc0a6670f50>]"
            ]
          },
          "metadata": {},
          "execution_count": 81
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(x,y,'*') #makes a starred graph"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "td84XdTB5hy5",
        "outputId": "bfc8c25e-44e6-41a6-a2ad-2e8e36f6bfa6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<matplotlib.lines.Line2D at 0x7fc0a65c6dd0>]"
            ]
          },
          "metadata": {},
          "execution_count": 83
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "using the notation '?', you can mkae the marker on a graph whatever you want it to be"
      ],
      "metadata": {
        "id": "H_nJOCoG6JYU"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(x,y,'r--') # 'r--' makes a red dashed line"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "I9L9b93y6Pe_",
        "outputId": "576616fb-843c-4b15-a548-b9c46c2220b8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<matplotlib.lines.Line2D at 0x7fc0a63feed0>]"
            ]
          },
          "metadata": {},
          "execution_count": 90
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(x,y,'r.') #'r.' makes a red dotted line"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cPvDbmfr6Rk4",
        "outputId": "12c2a4e1-bba9-4e2b-a203-6956876125f1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<matplotlib.lines.Line2D at 0x7fc0a6415f90>]"
            ]
          },
          "metadata": {},
          "execution_count": 89
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "https://matplotlib.org/2.0.1/api/colors_api.html #website includes all the colors"
      ],
      "metadata": {
        "id": "IH0HtX787bSD"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(x,y,marker='o',\n",
        "linestyle = 'None',\n",
        "markerfacecolor='#ff80c0')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cQFiS8bM7eKo",
        "outputId": "59ad3a11-b40f-48ab-9170-7146e757ef12"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<matplotlib.lines.Line2D at 0x7fc0a6209290>]"
            ]
          },
          "metadata": {},
          "execution_count": 104
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "can use color codes from this website to get any color you want https://www.color-hex.com/"
      ],
      "metadata": {
        "id": "3hGuIjcx8ZCT"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(x,y,marker='o',\n",
        "linestyle = 'none',\n",
        "markerfacecolor='#4B0082')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "73KF5Bfk8c3Z",
        "outputId": "6b49b03b-3bb3-425c-a630-841a7dc6d932"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<matplotlib.lines.Line2D at 0x7fc0a604cb90>]"
            ]
          },
          "metadata": {},
          "execution_count": 115
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Using np.linspace to make graphs"
      ],
      "metadata": {
        "id": "0VsZrRhJ-eTN"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "x=np.linspace(0,10,100)"
      ],
      "metadata": {
        "id": "QwMxFTC09gpZ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wl7aPYDX9kzZ",
        "outputId": "b5a2288a-a8b0-43a0-9112-4ed595dcb21a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0.        ,  0.1010101 ,  0.2020202 ,  0.3030303 ,  0.4040404 ,\n",
              "        0.50505051,  0.60606061,  0.70707071,  0.80808081,  0.90909091,\n",
              "        1.01010101,  1.11111111,  1.21212121,  1.31313131,  1.41414141,\n",
              "        1.51515152,  1.61616162,  1.71717172,  1.81818182,  1.91919192,\n",
              "        2.02020202,  2.12121212,  2.22222222,  2.32323232,  2.42424242,\n",
              "        2.52525253,  2.62626263,  2.72727273,  2.82828283,  2.92929293,\n",
              "        3.03030303,  3.13131313,  3.23232323,  3.33333333,  3.43434343,\n",
              "        3.53535354,  3.63636364,  3.73737374,  3.83838384,  3.93939394,\n",
              "        4.04040404,  4.14141414,  4.24242424,  4.34343434,  4.44444444,\n",
              "        4.54545455,  4.64646465,  4.74747475,  4.84848485,  4.94949495,\n",
              "        5.05050505,  5.15151515,  5.25252525,  5.35353535,  5.45454545,\n",
              "        5.55555556,  5.65656566,  5.75757576,  5.85858586,  5.95959596,\n",
              "        6.06060606,  6.16161616,  6.26262626,  6.36363636,  6.46464646,\n",
              "        6.56565657,  6.66666667,  6.76767677,  6.86868687,  6.96969697,\n",
              "        7.07070707,  7.17171717,  7.27272727,  7.37373737,  7.47474747,\n",
              "        7.57575758,  7.67676768,  7.77777778,  7.87878788,  7.97979798,\n",
              "        8.08080808,  8.18181818,  8.28282828,  8.38383838,  8.48484848,\n",
              "        8.58585859,  8.68686869,  8.78787879,  8.88888889,  8.98989899,\n",
              "        9.09090909,  9.19191919,  9.29292929,  9.39393939,  9.49494949,\n",
              "        9.5959596 ,  9.6969697 ,  9.7979798 ,  9.8989899 , 10.        ])"
            ]
          },
          "metadata": {},
          "execution_count": 132
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y=x**2"
      ],
      "metadata": {
        "id": "pWLtIczA-PSE"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "y"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1_Z_jRKt-TDF",
        "outputId": "f37c79ec-01d2-461f-862b-2fbd07b680dd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0.00000000e+00, 1.02030405e-02, 4.08121620e-02, 9.18273646e-02,\n",
              "       1.63248648e-01, 2.55076013e-01, 3.67309458e-01, 4.99948985e-01,\n",
              "       6.52994592e-01, 8.26446281e-01, 1.02030405e+00, 1.23456790e+00,\n",
              "       1.46923783e+00, 1.72431385e+00, 1.99979594e+00, 2.29568411e+00,\n",
              "       2.61197837e+00, 2.94867871e+00, 3.30578512e+00, 3.68329762e+00,\n",
              "       4.08121620e+00, 4.49954086e+00, 4.93827160e+00, 5.39740843e+00,\n",
              "       5.87695133e+00, 6.37690032e+00, 6.89725538e+00, 7.43801653e+00,\n",
              "       7.99918376e+00, 8.58075707e+00, 9.18273646e+00, 9.80512193e+00,\n",
              "       1.04479135e+01, 1.11111111e+01, 1.17947148e+01, 1.24987246e+01,\n",
              "       1.32231405e+01, 1.39679625e+01, 1.47331905e+01, 1.55188246e+01,\n",
              "       1.63248648e+01, 1.71513111e+01, 1.79981635e+01, 1.88654219e+01,\n",
              "       1.97530864e+01, 2.06611570e+01, 2.15896337e+01, 2.25385165e+01,\n",
              "       2.35078053e+01, 2.44975003e+01, 2.55076013e+01, 2.65381084e+01,\n",
              "       2.75890215e+01, 2.86603408e+01, 2.97520661e+01, 3.08641975e+01,\n",
              "       3.19967350e+01, 3.31496786e+01, 3.43230283e+01, 3.55167840e+01,\n",
              "       3.67309458e+01, 3.79655137e+01, 3.92204877e+01, 4.04958678e+01,\n",
              "       4.17916539e+01, 4.31078461e+01, 4.44444444e+01, 4.58014488e+01,\n",
              "       4.71788593e+01, 4.85766758e+01, 4.99948985e+01, 5.14335272e+01,\n",
              "       5.28925620e+01, 5.43720029e+01, 5.58718498e+01, 5.73921028e+01,\n",
              "       5.89327620e+01, 6.04938272e+01, 6.20752984e+01, 6.36771758e+01,\n",
              "       6.52994592e+01, 6.69421488e+01, 6.86052444e+01, 7.02887460e+01,\n",
              "       7.19926538e+01, 7.37169677e+01, 7.54616876e+01, 7.72268136e+01,\n",
              "       7.90123457e+01, 8.08182838e+01, 8.26446281e+01, 8.44913784e+01,\n",
              "       8.63585348e+01, 8.82460973e+01, 9.01540659e+01, 9.20824406e+01,\n",
              "       9.40312213e+01, 9.60004081e+01, 9.79900010e+01, 1.00000000e+02])"
            ]
          },
          "metadata": {},
          "execution_count": 135
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(x,y,marker='o',linestyle = 'None', markerfacecolor='#ff80c0')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 282
        },
        "id": "WGvgXB7f-HL8",
        "outputId": "3495dd35-9660-4185-c4e3-c2c45f97950a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<matplotlib.lines.Line2D at 0x7fc0a5e70d90>]"
            ]
          },
          "metadata": {},
          "execution_count": 137
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x=np.linspace(0,5,10) #starts at 0, ends in 5, and has 10 jumps along the way"
      ],
      "metadata": {
        "id": "14XpFJUj9lkK"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "12GSBbwn9spq",
        "outputId": "b67f3f15-ac2d-4f29-d288-c62dd74430ca"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0.        , 0.55555556, 1.11111111, 1.66666667, 2.22222222,\n",
              "       2.77777778, 3.33333333, 3.88888889, 4.44444444, 5.        ])"
            ]
          },
          "metadata": {},
          "execution_count": 188
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y=x**2"
      ],
      "metadata": {
        "id": "V0ybhwnM9s76"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "y"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DVLONUgY90fJ",
        "outputId": "d381a0c5-a5d3-4a59-d703-fa0dfa6d92fc"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0.        ,  0.30864198,  1.2345679 ,  2.77777778,  4.9382716 ,\n",
              "        7.71604938, 11.11111111, 15.12345679, 19.75308642, 25.        ])"
            ]
          },
          "metadata": {},
          "execution_count": 190
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(x,y,marker='o',\n",
        "linestyle = 'None',\n",
        "markerfacecolor='#ff80c0')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 282
        },
        "id": "vuuWcm6795vp",
        "outputId": "c0ceaf62-7c69-4c35-8c65-97ebde63dddf"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<matplotlib.lines.Line2D at 0x7fc0a5666b10>]"
            ]
          },
          "metadata": {},
          "execution_count": 191
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(x,y,marker='o', linestyle = 'None',markerfacecolor='#ff80c0')\n",
        "plt.title(\"My First Graph\"); #adding a semicolon at the end of the plot hides the extra text"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 281
        },
        "id": "zLMeeDxq99_a",
        "outputId": "11bdbac6-56b3-48ca-a287-60f0cdb76726"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXAAAAEICAYAAABGaK+TAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAATjklEQVR4nO3df2xdZ33H8c8nvkExacHt4lUhbcmGK4+ujIbZhaWMMWhx2zECTGOU0RWtI2gyUtmoMGOT8DRtaqasDCGPKdCuPyg/NrWWKyi4XSl0XaA4qVNwm3k1XQo1aePSeU0TA/XNd3/cY7gxTvzj/jj3uX6/pCvf85xzz/O9oHw4POe553FECACQnjV5FwAAWBkCHAASRYADQKIIcABIFAEOAIkiwAEgUQQ4mobtL9u+Mu86qsl22O7Iuw40JgIcNWX7gO2f2N4wr300C6fNKzjnjdk5nyt7/UFEXBoRN62wzkWD0vZG25+y/YOsz8eyWn5lJX0ClSLAUQ//I+nyuQ3br5D0wgrP+fcRcUrZ6wsnO9h2oZLObP+CpN0q1f2bkk6V9CpJX5d0cS36BBZDgKMebpH0R2XbV0q6eW7Ddrftp2y3lLW93fZDy+nE9tds/0n2/j22/9P2x2z/UFK/7Q7bX7f9f7aftv2F7Nj7slM8NHc1v8Dp/0zSs5KuiIjvRsl0RPxLRHwiO8/m7Er+Ktvfk/TVrP3fbD+Z9Xuf7V8tq/lG2/9s+27bh7P6Xjqv74tsP2p72vaAbS/nPxc0LwIc9fBNSS+y/fIspN8p6TNzOyNiRNIPJb2p7DNXqCzkV+jVkh6TdIakv5X0N5LuknSapDMlfSLr/3XZ8a88ydX8RZIGI+LYEvr9LUkvl9STbX9Z0jmSflHSg5JunXf8H2a1bZC0b4H9b5bULenXJL2j7LxY5Qhw1MvcVfjFkvZLmpy3/yZJ75Yk26erFFKfPcn5rsmuSKdtP32CY34QEZ+IiNmImJH0vKSXSnpJRPwoIu5fRv0bJD05t2H7LVnfh23fNe/Y/og4kvWpiLghIg5HxI8l9Ut6pe0Xlx3/pYi4L9v/l5J+w/ZZZfuvza72vyfpXknnL6NuNDECHPVyi6R3SXqPFr6y/oyk37W9XqWrzP+IiIMnOd/OiGjLXhtOcMz3521/SJIlfcv2w7b/eBn1/1DSxrmNiLgjItpUGlp5wYn6td1i+1rb37X9rKQD2a4NCx0fEc9JekbSS8r2P1n2/qikU5ZRN5oYAY66iIjHVbqZeZmk2xfYPynpG5LertLwyS3V6HZeH09GxHsj4iWS3ifpn5YxRe8eSW+1vZR/M+X9vkvSNpWGYF4saXPWXj6O/dOrbdunSDpd0g+WWBdWMQIc9XSVpDdExJET7L9ZpavkV2iBkK+U7d+3fWa2+b8qBe3cmPZTkn75JB+/TqWx81tsv8wlp2rx4YxTJf1YpSv4F0r6uwWOucz2a22/QKWx8G9GxPz/9wD8HAIcdZPN3thzkkMGVRqjHoyIozUooVvSA7afk3SHpKsj4rFsX7+km7Jx7XfM/2BEPC3pNZJ+JOl+SYdVuuF4qqQ/PUmfN0t6XKUx/0dUuqE732clfVSloZNfV3YvAFiMWdABjcT2dyW9LyL+Pe9a6sH2jZKeiIi/yrsWpIcrcDQM27+n0rDGV/OuBUgBvxRDQ7D9NUnnqvRDmaXMtQZWPYZQACBRDKEAQKLqOoSyYcOG2Lx5cz27BIDk7d279+mIaJ/fXtcA37x5s/bsOdksMgDAfLYfX6idIRQASBQBDgCJIsABIFEEOAAkigAHgEQtOgsle7D8zSqtahKSdkXEx233S3qvpKns0I9ExJ21KhQAUjQ0OqmB4XFNTM+oo61VvT2d2rZlU1XOvZRphLOSPhgRD2aPz9xr++5s38ciYmdVKgGAJjM0Oqmdg2PaoYK6163XyNGi+gbHJKkqIb7oEEpEHIyIB7P3h1VaDqs6//MBAE1sYHhcO1TQ1paC1tra2lLQDhU0MDxelfMvawzc9mZJWyQ9kDW93/a3bd9g+7QTfGa77T2290xNTS10CAA0pYnpGXWvaTmurXtNiyamZ6py/iUHeLbU022SPhARz0r6pKSXqbQiyUFJ/7DQ5yJiV0R0RURXe/vP/RIUAJpWR1urRo4Vj2sbOVZUR1trVc6/pAC3vVal8L41Im6XpIh4KiKK2aM/PyXpgqpUBABNorenU32a1e7irJ6P0O7irPo0q96ezqqcfymzUCzpekn7I+K6svaNZauGv03SWFUqAoAmMXejsn94XBPTR9TR1qpres6r6yyUC1VaJfw7tvdlbR+RdLnt81WaWnhApVW+AQBltm3ZVLXAnm/RAI+I+yV5gV3M+QaAHPFLTABIFAEOAIkiwAEgUQQ4ACSKAAeARBHgAJAoAhwAEkWAA0CiCHAASBQBDgCJIsABIFEEOAAkigAHgEQR4ACQKAIcABJFgANAoghwAEgUAQ4AiSLAASBRBDgAJIoAB4BEEeAAkCgCHAASRYADQKIIcABIFAEOAIkiwAEgUQQ4ACSKAAeARBHgAJAoAhwAErVogNs+y/a9th+x/bDtq7P2023fbfvR7O9ptS8XADBnKVfgs5I+GBHnSnqNpF7b50r6sKR7IuIcSfdk2wCAOiksdkBEHJR0MHt/2PZ+SZskbZP0+uywmyR9TVJfTaoEgGUaGp3UwPC4JqZn1NHWqt6eTm3bsinvsqpq0QAvZ3uzpC2SHpB0RhbukvSkpDNO8JntkrZL0tlnn73SOgFgyYZGJ7VzcEw7VFD3uvUaOVpU3+CYJDVViC/5JqbtUyTdJukDEfFs+b6ICEmx0OciYldEdEVEV3t7e0XFAsBSDAyPa4cK2tpS0FpbW1sK2qGCBobH8y6tqpYU4LbXqhTet0bE7VnzU7Y3Zvs3SjpUmxIBYHkmpmfUvabluLbuNS2amJ7JqaLaWMosFEu6XtL+iLiubNcdkq7M3l8paaj65QHA8nW0tWrkWPG4tpFjRXW0teZUUW0s5Qr8QklXSHqD7X3Z6zJJ10q62Pajki7KtgEgd709nerTrHYXZ/V8hHYXZ9WnWfX2dOZdWlUtZRbK/ZJ8gt1vrG45AFC5uRuV/cPjmpg+oo62Vl3Tc15T3cCUljkLBQBSsW3LpqYL7Pn4KT0AJIoAB4BEEeAAkCgCHAASRYADQKIIcABIFAEOAIkiwAEgUQQ4ACSKAAeARBHgAJAoAhwAEkWAA0CiCHAASBQBDgCJIsABIFEEOAAkigAHgEQR4ACQKAIcABJFgANAoghwAEgUAQ4AiSLAASBRBDgAJIoAB4BEEeAAkCgCHAASVci7AADNZWh0UgPD45qYnlFHW6t6ezq1bcumvMtqSotegdu+wfYh22Nlbf22J23vy16X1bZMACkYGp3UzsEx9R8Nja9br/6joZ2DYxoancy7tKa0lCGUGyVdskD7xyLi/Ox1Z3XLApCigeFx7VBBW1sKWmtra0tBO1TQwPB43qU1pUUDPCLuk/RMHWoBkLiJ6Rl1r2k5rq17TYsmpmdyqqi5VXIT8/22v50NsZx2ooNsb7e9x/aeqampCroD0Og62lo1cqx4XNvIsaI62lpzqqi5rTTAPynpZZLOl3RQ0j+c6MCI2BURXRHR1d7evsLuAKSgt6dTfZrV7uKsno/Q7uKs+jSr3p7OvEtrSiuahRIRT829t/0pSV+sWkUAkjU326R/eFwT00fU0daqa3rOYxZKjawowG1vjIiD2ebbJI2d7HgAq8e2LZsI7DpZNMBtf07S6yVtsP2EpI9Ker3t8yWFpAOS3lfDGgEAC1g0wCPi8gWar69BLQCAZeCn9ACQKAIcABJFgANAoghwAEgUAQ4AiSLAASBRBDgAJIoAB4BEEeAAkCgCHAASRYADQKIIcABIFAEOAIkiwAEgUQQ4ACSKAAeARBHgAJAoAhwAEkWAA0CiCHAASBQBDgCJIsABIFGFvAsAUB1Do5MaGB7XxPSMOtpa1dvTqW1bNuVdFmqIAAeawNDopHYOjmmHCupet14jR4vqGxyTJEK8iTGEAjSBgeFx7VBBW1sKWmtra0tBO1TQwPB43qWhhghwoAlMTM+oe03LcW3da1o0MT2TU0WoBwIcaAIdba0aOVY8rm3kWFEdba05VYR6IMCBJtDb06k+zWp3cVbPR2h3cVZ9mlVvT2fepaGGuIkJNIG5G5X9w+OamD6ijrZWXdNzHjcwmxwBDjSJbVs2EdirDEMoAJCoRQPc9g22D9keK2s73fbdth/N/p5W2zIBAPMt5Qr8RkmXzGv7sKR7IuIcSfdk2wCAOlo0wCPiPknPzGveJumm7P1Nkt5a5boAAItY6Rj4GRFxMHv/pKQzTnSg7e2299jeMzU1tcLuAADzVXwTMyJCUpxk/66I6IqIrvb29kq7AwBkVhrgT9neKEnZ30PVKwkAsBQrDfA7JF2Zvb9S0lB1ygEALNVSphF+TtI3JHXafsL2VZKulXSx7UclXZRtAwDqaNFfYkbE5SfY9cYq1wIAWAZ+iQkAiSLAASBRBDgAJIoAB4BEEeAAkCgCHAASRYADQKIIcABIFAEOAIliTUygQkOjkxoYHtfE9Iw62lrV29PJ2pSoCwIcqMDQ6KR2Do5phwrqXrdeI0eL6hssrT5IiKPWGEIBKjAwPK4dKmhrS0FrbW1tKWiHChoYHs+7NKwCBDhQgYnpGXWvaTmurXtNiyamZ3KqCKsJAQ5UoKOtVSPHise1jRwrqqOtNaeKsJoQ4EAFens61adZ7S7O6vkI7S7Oqk+z6u3pzLs0rALcxAQqMHejsn94XBPTR9TR1qpres7jBibqggAHKrRtyyYCG7lgCAUAEkWAA0CiCHAASBQBDgCJIsABIFEEOAAkigAHgEQR4ACQKAIcABJFgANAoghwAEgUAQ4AiSLAASBRFT2N0PYBSYclFSXNRkRXNYoCACyuGo+T/e2IeLoK5wGWhdXgsdrxPHAkidXggcrHwEPSXbb32t6+0AG2t9veY3vP1NRUhd0BJawGD1Qe4K+NiFdJulRSr+3XzT8gInZFRFdEdLW3t1fYHVDCavBAhQEeEZPZ30OSBiVdUI2igMWwGjxQQYDbXm/71Ln3kt4kaaxahQEnw2rwQGU3Mc+QNGh77jyfjYivVKUqYBGsBg9UEOAR8ZikV1axFmBZWA0eqx2/xASARBHgAJAoAhwAEkWAA0CiCHAASBQBDgCJIsABIFEEOAAkigAHgETxPHCsCIspAPkjwLFsLKYANAaGULBsLKYANAYCHMvGYgpAYyDAsWwspgA0BgIcy8ZiCkBj4CYmlo3FFIDGQIBjRVhMAcgfQygAkCgCHAASRYADQKIIcABIFDcxE8MzSADMIcATwjNIAJRjCCUhPIMEQDkCPCE8gwRAOQI8ITyDBEA5AjwhPIMEQDluYiaEZ5AAKEeAL1GjTN/jGSQA5hDgS8D0PQCNiDHwJWD6HoBGVNEVuO1LJH1cUoukT0fEtVWpqkwjDF1MTM+oe93649pK0/eO1LUOACi34itw2y2SBiRdKulcSZfbPrdahUk/G7roPxoaX7de/UdDOwfHNDQ6Wc1uFsX0PQCNqJIhlAskTUTEYxHxE0mfl7StOmWVNMrQBdP3ADSiSoZQNkn6ftn2E5JePf8g29slbZeks88+e1kdNMrQBdP3ADSims9CiYhdknZJUldXVyznsx1trRo5WtTWlp+VmdfQBdP3ADSaSoZQJiWdVbZ9ZtZWNQxdAMCJVXIFPiLpHNu/pFJwv1PSu6pSVYahCwA4sRUHeETM2n6/pGGVphHeEBEPV62yDEMXALCwisbAI+JOSXdWqRYAwDLwS0wASBQBDgCJIsABIFEEOAAkyhHL+m1NZZ3ZU5IeX+HHN0h6uorlpIDvvDrwnVeHSr7zSyOifX5jXQO8Erb3RERX3nXUE995deA7rw61+M4MoQBAoghwAEhUSgG+K+8CcsB3Xh34zqtD1b9zMmPgAIDjpXQFDgAoQ4ADQKKSCHDbl9getz1h+8N511Nrtm+wfcj2WN611IPts2zfa/sR2w/bvjrvmmrN9jrb37L9UPad/zrvmurFdovtUdtfzLuWerB9wPZ3bO+zvaeq5270MfBs8eT/lnSxSsu2jUi6PCIeybWwGrL9OknPSbo5Is7Lu55as71R0saIeND2qZL2Snprk/93bEnrI+I522sl3S/p6oj4Zs6l1ZztP5fUJelFEfHmvOupNdsHJHVFRNV/uJTCFXjNF09uNBFxn6Rn8q6jXiLiYEQ8mL0/LGm/SmuuNq0oeS7bXJu9GvtqqgpsnynpdyR9Ou9amkEKAb7Q4slN/Y97NbO9WdIWSQ/kW0ntZUMJ+yQdknR3RDT9d5b0j5I+JOlY3oXUUUi6y/bebJH3qkkhwLFK2D5F0m2SPhARz+ZdT61FRDEizldpPdkLbDf1cJntN0s6FBF7866lzl4bEa+SdKmk3myItCpSCPCaL56M/GXjwLdJujUibs+7nnqKiGlJ90q6JO9aauxCSW/JxoQ/L+kNtj+Tb0m1FxGT2d9DkgZVGhauihQC/KeLJ9t+gUqLJ9+Rc02oouyG3vWS9kfEdXnXUw+22223Ze9bVbpJ/1/5VlVbEfEXEXFmRGxW6d/xVyPi3TmXVVO212c35mV7vaQ3Sara7LKGD/CImJU0t3jyfkn/WovFkxuJ7c9J+oakTttP2L4q75pq7EJJV6h0RbYve12Wd1E1tlHSvba/rdJFyt0RsSqm1a0yZ0i63/ZDkr4l6UsR8ZVqnbzhpxECABbW8FfgAICFEeAAkCgCHAASRYADQKIIcABIFAEOAIkiwAEgUf8PKApOSt8jIa4AAAAASUVORK5CYII=\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(x,y,marker='o', linestyle = 'None',markerfacecolor='#ff80c0')\n",
        "plt.title(\"My First Graph\");\n",
        "plt.xlabel(\"X axis label goes here\")\n",
        "plt.ylabel(\"Y axis label goes here\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 312
        },
        "id": "rnlFbSOP-7Od",
        "outputId": "c8ec2f6e-a6e1-42ca-d542-a9f6fcf8f353"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, 'Y axis label goes here')"
            ]
          },
          "metadata": {},
          "execution_count": 193
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(x,y,marker='o', linestyle = 'None',markerfacecolor='#ff80c0')\n",
        "plt.title(\"My First Graph\");\n",
        "plt.xlabel(\"Apples\")\n",
        "plt.ylabel(\"Bananas\");"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "id": "GPGIORqIAIfd",
        "outputId": "52a0e0ff-dcb9-4001-9d0e-4ae4f2abbc0d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(x,y,marker='o', linestyle = 'None',markerfacecolor='#ff80c0',label='Graph of x squared')\n",
        "plt.title(\"My First Graph\");\n",
        "plt.xlabel(\"X axis label goes here\")\n",
        "plt.ylabel(\"Y axis label goes here\")\n",
        "plt.legend() #the () next to legend is what makes the legend appear, in order to add a legend, create a label=\"whatever you want it\""
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 312
        },
        "id": "Kbe199UOANIc",
        "outputId": "9dca1cec-e4f1-4949-8e32-55b706ea51a8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.legend.Legend at 0x7fc0a5acc350>"
            ]
          },
          "metadata": {},
          "execution_count": 162
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x=np.linspace(0,2,100)\n",
        "\n",
        "plt.plot(x,x, label= \"linear\")       \n",
        "plt.plot(x,x**2, label= \"squared\") \n",
        "plt.plot(x,x*3, label= \"cubed\")\n",
        "plt.legend()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 282
        },
        "id": "un2wJg1BBcRd",
        "outputId": "abd89084-e686-484e-e101-06bc8d4662f3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.legend.Legend at 0x7fc0a5acb8d0>"
            ]
          },
          "metadata": {},
          "execution_count": 176
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x=np.linspace(0,2,100)\n",
        "\n",
        "plt.plot(x,x, 'r--' , label= \"linear\") #putting - creates lines \n",
        "plt.plot(x,x**2, 'bs' , label= \"squared\") #putting an s after any color creates squares\n",
        "plt.plot(x,x*3, 'g^', label= \"cubed\"); #^ creates triangles\n",
        "plt.legend();"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "oyimYjJCDHK_",
        "outputId": "d90d3ff4-3b6f-4e83-bf66-dbbe77117b88"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Making even more plots "
      ],
      "metadata": {
        "id": "nEEXY8UTEkGa"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "names=['cat', 'dog', 'bird'] #first, use names=[] and input a series of names"
      ],
      "metadata": {
        "id": "nl8j6oP-DpUn"
      },
      "execution_count": 31,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "names"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cOrURvSUEtSR",
        "outputId": "43d7badc-8fed-4d89-88e9-12f19ed96892"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['cat', 'dog', 'bird']"
            ]
          },
          "metadata": {},
          "execution_count": 205
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "name[0] #python starts with 0 "
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "id": "THnw17QQEuOB",
        "outputId": "b7fb2824-976a-4f6c-fd73-037bf2f25bc1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'cat'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 209
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "name[1]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "id": "1dvw5wOKExIS",
        "outputId": "4ab3d6f0-4c41-4dbd-c9e3-5ff8e67e3a98"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'dog'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 210
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "name[2]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "id": "X2cCCqaAEx9Q",
        "outputId": "cf222cfc-5ccb-4fde-8644-2e52d3650e2b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'bird'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 211
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "values=[15,18,6] #second, use values=[] and input a series of values"
      ],
      "metadata": {
        "id": "KJoT47xDE5Sy"
      },
      "execution_count": 32,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "values"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "C_kB41VsFAMC",
        "outputId": "9f08471d-ff8c-40dc-ea88-90a17a923766"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[15, 18, 6]"
            ]
          },
          "metadata": {},
          "execution_count": 220
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(1,figsize=(10,10))\n",
        "\n",
        "plt.subplot(1,3,1) #tells us that we want one row and three columns and the last number tells us where we want the \n",
        "plt.bar(name,values)\n",
        "\n",
        "plt.subplot(1,3,2) \n",
        "plt.scatter(names,values)\n",
        "\n",
        "plt.subplot(1,3,3)\n",
        "plt.plot(names,values)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 609
        },
        "id": "6cB6EUmyFHeg",
        "outputId": "72155e6e-4996-4694-c659-86248885756d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<matplotlib.lines.Line2D at 0x7fc0a50d8910>]"
            ]
          },
          "metadata": {},
          "execution_count": 235
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x720 with 3 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(1,figsize=(10,10))\n",
        "\n",
        "plt.subplot(2,2,1) \n",
        "plt.bar(name,values)\n",
        "\n",
        "plt.subplot(2,2,2) \n",
        "plt.scatter(names,values)\n",
        "\n",
        "plt.subplot(2,2,3)\n",
        "plt.plot(names,values)\n",
        "\n",
        "plt.subplot(2,2,4)\n",
        "plt.plot(names,values)  #by making all the graph have to 2 rows and 2 columns we are able to change the position they are in"
      ],
      "metadata": {
        "id": "STtr9LR7FjMg",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 609
        },
        "outputId": "fef3ec78-7672-426b-b473-99fce6964dc1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<matplotlib.lines.Line2D at 0x7fc0a4cde2d0>]"
            ]
          },
          "metadata": {},
          "execution_count": 239
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 720x720 with 4 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Lemonade Stand Assignment(8/25/22)"
      ],
      "metadata": {
        "id": "x7ybS_STqnWl"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "Slemonade=2"
      ],
      "metadata": {
        "id": "9Ot0yiMqqrzc"
      },
      "execution_count": 1,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "Slemonade"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kpicoQDnqtOl",
        "outputId": "72919b93-ffed-4e53-8870-9bc021ae2f0a"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2"
            ]
          },
          "metadata": {},
          "execution_count": 2
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Mlemonade=4"
      ],
      "metadata": {
        "id": "l-rOwppTqugl"
      },
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "Mlemonade"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qS5UTJHkqvuk",
        "outputId": "f6a598b2-5f42-4383-ae41-0311ac1f4686"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "4"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Llemonade=6"
      ],
      "metadata": {
        "id": "fiFqJLzRqx4W"
      },
      "execution_count": 6,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "Llemonade"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "U-jHr8ebqzQF",
        "outputId": "c3ef860a-b2d3-4dae-b230-4be385e7b841"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "6"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Slemonade_sold=10"
      ],
      "metadata": {
        "id": "5YWQcmL7x_ay"
      },
      "execution_count": 11,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "Mlemonade_sold=20"
      ],
      "metadata": {
        "id": "qzAQKp-Wx_YL"
      },
      "execution_count": 12,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "Llemonade_sold=30"
      ],
      "metadata": {
        "id": "FvN99Dndx_V5"
      },
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "total_sales=(Slemonade*Slemonade_sold)+(Mlemonade*Mlemonade_sold)+(Llemonade*Llemonade_sold)"
      ],
      "metadata": {
        "id": "o6ZDrDipx_T5"
      },
      "execution_count": 14,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "total_sales"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CqjPSYVnx_Qp",
        "outputId": "9f4c039c-7004-4474-d1dd-1f6b12300aa1"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "280"
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "total_Slemonade_sales= (Slemonade*Slemonade_sold)"
      ],
      "metadata": {
        "id": "DYaWih8-yfPJ"
      },
      "execution_count": 20,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "total_Slemonade_sales"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_q7ygfcCyfL6",
        "outputId": "c95943b5-fb7b-4d3c-96fc-e3a5b0b295cd"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "20"
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "total_Mlemonade_sales=(Mlemonade*Mlemonade_sold)"
      ],
      "metadata": {
        "id": "cDIcCA2IyfIx"
      },
      "execution_count": 22,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "total_Mlemonade_sales"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "VCaEOBfsyzcJ",
        "outputId": "fb0b6491-31cb-47bc-ec8b-34780650165a"
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "80"
            ]
          },
          "metadata": {},
          "execution_count": 23
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "total_Llemoande_sales=(Llemonade*Llemonade_sold)"
      ],
      "metadata": {
        "id": "KIAHIjw_y2TZ"
      },
      "execution_count": 24,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "total_Llemoande_sales"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_oEcVmeBy2Px",
        "outputId": "bc14647d-263e-4b89-b85d-5776ec1b0707"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "180"
            ]
          },
          "metadata": {},
          "execution_count": 25
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Stats Notebook Lab #1(8/29/22)"
      ],
      "metadata": {
        "id": "nK1g4bDerLDH"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "text"
      ],
      "metadata": {
        "id": "AcK8F0eCrUVG"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "**text** #creates bold text"
      ],
      "metadata": {
        "id": "POcXnotkrfEe"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Style Guide Colab Markdown"
      ],
      "metadata": {
        "id": "dBpfAOihru-_"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "https://colab.research.google.com/notebooks/markdown_guide.ipynb"
      ],
      "metadata": {
        "id": "rnmKtLi7rzRv"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "<img src = \"https://blog.mystart.com/wp-content/uploads/MyGolden_Retriever_02-mystart.jpeg\"\n",
        "width = 200> \n",
        "in order to import a image into colab, you must use a text cell instead of a code cell"
      ],
      "metadata": {
        "id": "1MSbyQJ_sCGP"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Math Typesetting"
      ],
      "metadata": {
        "id": "ebxvaOP1sa7f"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "https://github.com/williamedwardhahn/Probability_Statistics/blob/main/Math_LaTeX.pdf"
      ],
      "metadata": {
        "id": "yV0A0WxyskDf"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "x"
      ],
      "metadata": {
        "id": "2JwbbfqutC53"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "$x$     #putting a dollar sign before and after the x created the math symbol for x"
      ],
      "metadata": {
        "id": "29QiR1zbtC7_"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "7"
      ],
      "metadata": {
        "id": "XLlq3Pl3tDFv"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "$7$"
      ],
      "metadata": {
        "id": "HyW444V-tDI3"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "$y=mx+b$"
      ],
      "metadata": {
        "id": "0H7oZk8YtDK_"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "$\\frac{a}{b}$      the back slash is crucial for the fraction to work"
      ],
      "metadata": {
        "id": "eUJMrKiHtDOv"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "$a^b$   ^ makes any number after it a exponent"
      ],
      "metadata": {
        "id": "awrWrdzdt6LP"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "$a^{12345}$"
      ],
      "metadata": {
        "id": "hbCUNChntDRA"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "$a_{bc}$     _ makes the text after subscript"
      ],
      "metadata": {
        "id": "ZYhGklvDxEPJ"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "$M_{1,2}$"
      ],
      "metadata": {
        "id": "-L1Zher8xEHB"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "$f(x) = \\frac{1}{\\sigma\\sqrt{2\\pi}}e^ {-\\frac{1}{2}(\\frac{x-\\mu}{\\sigma})^2}$"
      ],
      "metadata": {
        "id": "dEjKjcijxEBw"
      }
    }
  ]
}
